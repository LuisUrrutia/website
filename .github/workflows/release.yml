name: Generate a release and deploy

on:
  push:
    branches:
      - main

env:
  PROJECT_NAME: personal-website
  BUILD_DIR: dist

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest
    name: Create Release
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
  
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .tool-versions
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm run build
      
      - name: Compress dist folder
        run: |
          tar -czvf /tmp/dist.tar.gz dist/

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - uses: actions/upload-artifact@v4
        with:
          name: last-release-artifact
          path: /tmp/dist.tar.gz
  
  deploy:
    needs: release
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Pages
    steps:
      - name: Download release artifact
        uses: actions/download-artifact@v4
        with:
          name: last-release-artifact
          path: /tmp/artifact

      - name: Display structure of downloaded files
        run: ls -R /tmp/artifact
      
      - name: Extract release artifact
        run: tar -xzvf /tmp/artifact/dist.tar.gz -C ./dist

      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ${{ env.BUILD_DIR }} --project-name=${{ env.PROJECT_NAME }}
